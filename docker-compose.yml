version: "3.9"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://user-service:8081
      - VITE_TODO_API=http://todo-service:8082
    depends_on:
      - user-service
      - todo-service
    networks:
      - backend-network

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=BULOCHNIK228
      - DB_NAME=todo
      - DB_PORT=5432
      - JWT_SECRET=your_jwt_secret_here
    volumes:
      - ./user-service/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network

  todo-service:
    build:
      context: ./todo-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    environment:
      - DB_HOST=postgres
      - DB_USER=postgres
      - DB_PASSWORD=BULOCHNIK228
      - DB_NAME=todo
      - DB_PORT=5432
      - JWT_SECRET=your_jwt_secret_here
    volumes:
      - ./todo-service/.env:/app/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - backend-network

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: BULOCHNIK228
      POSTGRES_DB: todo
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d todo"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - backend-network

networks:
  backend-network:
    driver: bridge

volumes:
  pgdata: